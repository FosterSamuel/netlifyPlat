---
layout: post
title:  "Ten Years of Code"
date:   2018-11-10 08:00:00 -0800
author: "Samuel Foster"
categories: 2018 november personal
tagList: {2018}
slug: ten-years-of-code
chronological: TRUE
cardDescription: In for the long haul.
cardImage: https://www.fostersamuel.com/blog/media/young.jpg
--- 

In 2008 I wanted to make video games. One Google search led me to <a class="post-writtenLink" target="_blank" rel="noopener" href="https://www.roblox.com">ROBLOX.</a> They promised anyone, of any age, could make games. I got hooked. 

I built games in ROBLOX Studio, an editor where blocks could be arranged in a 3D environment. Studio’s “run now” feature spawned me into the world I built. The blocks laid dormant. It needed the scripting language Lua.  
 
Studio featured a free market for creations, including Lua scripts for your game. At ten years old, I was starstruck. Those scripts, written in a weird form of English, filled games with life. My excitement, however, matched my laziness. I did not feel motivated to read the daunting documentation of Lua. I wanted to cut corners. I wanted to make games, easily.  

 

I took scripts from the marketplace and modified them to my game’s needs, which usually didn’t work. But when it did, I felt amazing. I tinkered with scripts for hours. Some of my own scripts ended up on the marketplace, but it didn’t sate my hunger for code. I wanted more. 

# The Journey Begins
 
After searching in 2009, I found the free programming language <a class="post-writtenLink" href="http://www.libertybasic.com/" target="_blank">Liberty BASIC.</a> From the introduction file, I learned about variables, looping, conditionals, operators, and subroutines. I still wanted to make games, so I set off on my first project: a text-based RPG called *The Lands of Skarr* (TLOS).   

<figure class="post-figure">
	<img class="post-figureImage" alt="Option list for text-based RPG game" width="auto" height="200px" src="../media/TLOS_game.jpg">
	<figcaption class="post-figureCaption">All commands were number based</figcaption>
</figure>  

<figure class="post-figure">
	<img class="post-figureImage" alt="Liberty BASIC code from text-based game" width="auto" height="200px" src="../media/TLOS_code.jpg">
	<figcaption class="post-figureCaption">Code from the battle system</figcaption>
</figure>  

The game had three areas to explore, a basic fighting system, a leveling system, and a shop. I never finished it, but I learned a lot by writing it. In 2010, after more Liberty BASIC tutorials, I built a pet rock game. I even made my own “company” for it: SmartX Software.  

<figure class="post-figure">
	<img class="post-figureImage" alt="'SmartX Software' logo loading screen  for Pet Rock game" width="auto" height="200px" src="../media/SmartX.jpg">
	<figcaption class="post-figureCaption">Loading screen for the Pet Rock game</figcaption>
</figure>  

<figure class="post-figure">
	<img class="post-figureImage" alt="Store for Pet Rock game" width="auto" height="200px" src="../media/Pet Rock Store.jpg">
	<figcaption class="post-figureCaption">Customize your pet rock using RockPoints (acquired by waiting)</figcaption>
</figure>   

<figure class="post-figure">
	<img class="post-figureImage" alt="Collection of customized pet rocks drawn in Microsoft Paint" width="auto" height="200px" src="../media/PetRocks.jpg">
	<figcaption class="post-figureCaption">Some of my favorite pet rocks from the full collection</figcaption>
</figure>   

In 2011, I built a project about my favorite subject: math. I tried to signal that it could calculate a lot by dubbing it “BASIC Math Pak.”  

<figure class="post-figure">
	<img class="post-figureImage" alt="List of tools available in the BASIC Math Pak" width="auto" height="200px" src="../media/PAK.jpg">
	<figcaption class="post-figureCaption">Everything you need</figcaption>
</figure>    

It also featured a primitive scripting language called DRONE, which processed basic math commands.

<figure class="post-figure">
	<img class="post-figureImage" alt="DRONE command lists the factors of the number 28" width="auto" height="200px" src="../media/DRONE.jpg">
	<figcaption class="post-figureCaption">Every line invoked the notice window</figcaption>
</figure>    

During the same year I started watching computer science documentaries with my dad. He saw my eyes light up while learning about Babbage, Lovelace, and Turing. He decided we should visit the Computer History Museum, which was a few hours away in Mountain View.  On paper, this was the perfect outing. I wish I could say we had an amazing time, but I was a stubborn, anxious, and selfish thirteen-year-old at the time. We strolled through the exhibits while I was complaining. I wanted to be in the comfort of home, coding away. I regret my attitude and lack of appreciation. By that point, my computer addiction had taken over my desire to do anything else.  

# Life 

In 2012 I felt ready to learn Java. Life, however, hit its lowest point. I was eating junk food by my own choice, waking up, coding, doing schoolwork, then coding more, then barely sleeping. The cycle caught up with me and I found myself pale, rude, overweight, and unable to hold a decent conversation in public. That summer, I faced my own ultimatum: continue down that dark path and suffer from my own choices or change. I decided to change. 

First, I had to get away from the computer. I stopped playing video games. I stopped programming. I only used the computer for homework. The headaches from screen overexposure disappeared, but my mind still generally ached. Sleep was next to fix.  Over three months, I switched from sleeping at 2:30 AM and waking at 9:30 AM to sleeping at 9:30 PM and waking at 5:30 AM. I never felt more alive. My head stopped hurting completely.  

My body was still weak. I changed my diet. I swapped soda for water. I switched from sugary cereal to plain cereal, microwave lunches to sandwiches, snacks to not snacking, and controlled my portions of mom’s dinner.  The dietary changes were hard, but I knew I did not want to go back to what I was before. There was no other way to go but forward.  

I started swimming laps in a pool every day for exercise. At the beginning my breath expired after two laps. Towards the end of that summer, I could go for thirty laps without getting tired. All these changes helped the weight disappear and restarted my physical health. 

<figure class="post-figure">
	<img class="post-figureImage" alt="Samuel Foster, before and after summer 2012" width="auto" height="200px" src="../media/comp.png">
	<figcaption class="post-figureCaption">Before and after summer 2012</figcaption>
</figure> 

In 2013, after nearly a year away from programming, I felt healthy enough to continue my passion by learning Java. I watched YouTube tutorials. I took free Udemy courses. After learning enough, I tried to build a game using the LibGDX library. I wanted to build my own version of the Legend of Zelda. It didn’t get far, but I learned a lot about object-oriented programming from the attempt. 

<figure class="post-figure">
	<img class="post-figureImage" alt="Screenshot of Java game" width="auto" height="200px" src="../media/javaGame.jpg">
	<figcaption class="post-figureCaption">My drawing of grass looks like cabbage</figcaption>
</figure> 
 

During the same year, my brother, James, pushed me to make good use of the weight loss. He pointed out that I was lighter but still sitting around most of the day. He was right. He taught me about weightlifting and running. He taught me the value of challenging my body. I resisted at the start, but I really enjoyed running. 

I focused entirely on running. At first, I could only run for thirty seconds before my legs gave out. The thrill of moving kept me working on this challenge. I ran every other morning, a little farther each time. After six months, I was finally able to run one full mile. Every month or so I’d fall behind, but I enjoyed it so much, I kept coming back for more. I felt alive. 

In late 2014 I decided to learn web development. I studied HTML and CSS by reading through W3Schools, watching YouTube tutorials, and taking more free Udemy courses. I worked as a math tutor, but in my free time, I’d design and build mock websites. I kept running, learning, and pushing forward. 

# Freelance 

In early 2015 I started my freelance business by building a website for a local musician. For the project, I learned how to use PHP to get and display results from a MySQL database. I also learned how hard it is to make a website look good and scale well on all screen sizes.  

I also ran a lot that year. I ran in the rain. I ran through the blazing hot summer. I ran when I did not want to, ran when a girl left me, ran when I ate bad, ran when I slept poorly. Running became more than just a thrilling activity for me. It was cathartic, and I looked forward to it every week. 

Later in 2015, after three months of post-breakup sadness and chocolate-eating, I decided to pursue a degree in Computer Science. I could not afford an out-of-state school, and I didn’t believe I would get accepted. UC schools in my own state were too expensive, so I ruled them out. I narrowed my choice to one university: Cal Poly Pomona. I applied and waited. 

Early in February 2016, Cal Poly Pomona sent me an acceptance email. I was ecstatic. I had the opportunity to study my passion, and I wanted to make the most of it. I started in September of that year. 

# College 

I am still here, and the last two years have been an absolute blast. I worked on freelance and side projects while living in the dorms. I met awesome people. I learned foundational knowledge about computer science, and it’s helped push my passion further. I still run a lot. 

<figure class="post-figure">
	<img class="post-figureImage" alt="Screenshot of what-to-do" width="auto" height="200px" src="../media/sideProject.jpg">
	<figcaption class="post-figureCaption">One of my favorite side projects</figcaption>
</figure> 


With the help of my good friends Hanaa Zerroug, Justin Tok, and Anirban Manna, I am the co-founder and co-president of the Software Engineering Association on campus. We are pushing everyone to practice documentation, communication, testing, and every other skill software engineers need. You can follow our progress on <a href="https://www.cppsea.com/" class="post-writtenLink" target="_blank">our website.</a>


<style>
.vlogBox {
	max-width: none;
	max-height: none;
	position: relative;
	padding: 0;
	padding-top: 30px;
	height: 0;
	width: 100%;
	height: 30vh;
	overflow: hidden;
	display: inline-block;
}

.vlog  {
 	max-width: none;
	max-height: none;
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 30vh;
	overflow: hidden
}

@media screen and (min-width: 900px) {
	.vlogBox, .vlog {
		height: 60vh;
		margin-bottom: 2rem;
	}
}

</style>
<div class="vlogBox"><iframe class="vlog" width="560" height="315" src="https://www.youtube-nocookie.com/embed/mELz5W7q6wI" frameborder="0" allowfullscreen></iframe></div>

# Future 

Everything above is a condensed summary of the last ten years. If you are someone beginning their programming journey, here are three quick things I wish I did differently:
<ul>
	<li>Cared about physical and mental health sooner</li>
	<li>Poured time into people and mentorship</li>
	<li>Not been afraid to join a programming community</li>
</ul>
<p></p>

This post does not list all the times I failed, messed up, broke code, or broke down personally. For anyone reading this, I hope you take away at least one thing: never give up. If I stopped when I didn't understand something, made a fool of myself, or failed completely, I wouldn't be here right now.

I never want to stop learning, running, or challenging myself. I am now seeking a software engineering internship for the summer of 2019. I’m excited for the opportunity to learn and work in a production-level environment. 

There’s something I need to do before that happens though. I regret how I acted and how ungrateful I was as a teenager. I’m planning a trip back to the Computer History Museum with my dad. I can’t wait.  